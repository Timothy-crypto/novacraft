/*
NovaCraft - Single-file React app (default export) using TailwindCSS.

What's included in this file:
- A production-ready React component structure (Homepage, About, Services, Pricing, Contact, Checkout flow button)
- Tailwind utility classes (assumes Tailwind is enabled in your build)
- Stripe Checkout client call to a server endpoint (/api/create-checkout-session)
- README-style comments with deployment & Stripe serverless snippet for Vercel/Netlify

How to deploy:
1. Create a new React app (Vite or Create React App). Install Tailwind per Tailwind docs.
2. Add this component as src/App.jsx (or similar) and ensure Tailwind is loaded.
3. Create the serverless endpoint (example below) and set STRIPE_SECRET_KEY.
4. Deploy to Vercel or Netlify. In Vercel, add environment variable STRIPE_SECRET_KEY.

Stripe serverless example (Node) for /api/create-checkout-session (Vercel serverless or Netlify functions):

// server/api/create-checkout-session.js  (Node / Vercel / Netlify)
// npm install stripe

/*
const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);
module.exports = async (req, res) => {
  if (req.method !== 'POST') return res.status(405).end('Method Not Allowed');
  try {
    const { priceId, quantity = 1 } = req.body;
    const session = await stripe.checkout.sessions.create({
      payment_method_types: ['card'],
      mode: 'payment',
      line_items: [{ price: priceId, quantity }],
      success_url: `${process.env.ORIGIN_URL || 'https://your-site.com'}/success?session_id={CHECKOUT_SESSION_ID}`,
      cancel_url: `${process.env.ORIGIN_URL || 'https://your-site.com'}/cancel`,
    });
    return res.status(200).json({ url: session.url });
  } catch (err) {
    console.error(err);
    return res.status(500).json({ error: 'Internal error' });
  }
};
*/

*/

import React from 'react';

// Small utility components
const Nav = ({ onNav }) => (
  <nav className="w-full bg-white/80 backdrop-blur sticky top-0 z-40 shadow-sm">
    <div className="max-w-6xl mx-auto px-6 py-3 flex items-center justify-between">
      <div className="flex items-center gap-3">
        <div className="w-10 h-10 rounded-lg bg-gradient-to-br from-indigo-500 to-purple-500 flex items-center justify-center text-white font-bold">NC</div>
        <div>
          <div className="font-semibold">NovaCraft</div>
          <div className="text-xs text-slate-500">Crafting Smart Solutions</div>
        </div>
      </div>

      <div className="hidden md:flex items-center gap-6 text-sm text-slate-700">
        <button onClick={() => onNav('home')} className="hover:underline">Home</button>
        <button onClick={() => onNav('services')} className="hover:underline">Services</button>
        <button onClick={() => onNav('pricing')} className="hover:underline">Pricing</button>
        <button onClick={() => onNav('about')} className="hover:underline">About</button>
        <button onClick={() => onNav('contact')} className="hover:underline">Contact</button>
      </div>

      <div className="flex items-center gap-3">
        <a href="#" onClick={(e)=>e.preventDefault()} className="text-sm px-3 py-2 rounded-lg border">Sign in</a>
        <a href="#" onClick={(e)=>e.preventDefault()} className="text-sm px-4 py-2 rounded-lg bg-indigo-600 text-white shadow">Request Demo</a>
      </div>
    </div>
  </nav>
);

const Hero = ({ onBuy }) => (
  <header className="bg-gradient-to-br from-slate-50 to-white">
    <div className="max-w-6xl mx-auto px-6 py-20 grid md:grid-cols-2 gap-10 items-center">
      <div>
        <h1 className="text-4xl md:text-5xl font-extrabold leading-tight">NovaCraft — Smart digital products, built for growth.</h1>
        <p className="mt-6 text-lg text-slate-600">Beautifully designed websites, fast deployments, and integrated payments so you can sell with confidence.</p>
        <div className="mt-8 flex gap-4">
          <button onClick={() => onBuy('price_monthly_1')} className="px-5 py-3 rounded-lg bg-indigo-600 text-white shadow">Buy Now</button>
          <a href="#pricing" className="px-5 py-3 rounded-lg border">See Pricing</a>
        </div>
        <div className="mt-6 text-sm text-slate-500">Trusted by small businesses and creators. No code required.</div>
      </div>

      <div className="p-6 bg-white rounded-2xl shadow-md">
        <div className="text-sm text-slate-500">Live preview</div>
        <div className="mt-4 w-full h-48 bg-gradient-to-tr from-indigo-50 to-purple-50 rounded-lg flex items-center justify-center text-indigo-600 font-semibold">Your website, instantly.</div>
      </div>
    </div>
  </header>
);

const Services = () => (
  <section id="services" className="max-w-6xl mx-auto px-6 py-16">
    <h2 className="text-2xl font-bold">Services</h2>
    <p className="text-slate-600 mt-2">End-to-end website design, deployment, and e-commerce setup.</p>
    <div className="mt-8 grid md:grid-cols-3 gap-6">
      {[
        {title: 'Web Design', desc: 'Responsive, modern UI tailored to your brand.'},
        {title: 'E-commerce', desc: 'Stripe-powered checkout and product pages.'},
        {title: 'Hosting & Support', desc: 'Fast deploys with SSL and backups.'},
      ].map((s)=> (
        <div key={s.title} className="p-6 bg-white rounded-xl shadow">
          <div className="font-semibold">{s.title}</div>
          <div className="text-slate-600 mt-2">{s.desc}</div>
        </div>
      ))}
    </div>
  </section>
);

const Pricing = ({ onBuy }) => (
  <section id="pricing" className="max-w-6xl mx-auto px-6 py-16">
    <h2 className="text-2xl font-bold">Pricing</h2>
    <p className="text-slate-600 mt-2">Simple, predictable pricing — pay only for what you need.</p>
    <div className="mt-8 grid md:grid-cols-3 gap-6">
      <div className="p-6 bg-white rounded-xl shadow flex flex-col">
        <div className="text-xl font-semibold">Starter</div>
        <div className="text-slate-500 mt-2">Single page, basic hosting</div>
        <div className="mt-4 text-3xl font-bold">$9</div>
        <div className="mt-4 flex-1" />
        <button onClick={() => onBuy('price_monthly_starter')} className="mt-4 px-4 py-2 rounded-lg bg-indigo-600 text-white">Buy Starter</button>
      </div>

      <div className="p-6 bg-white rounded-xl shadow flex flex-col border-2 border-indigo-50">
        <div className="text-xl font-semibold">Business</div>
        <div className="text-slate-500 mt-2">Multiple pages, e-commerce</div>
        <div className="mt-4 text-3xl font-bold">$29</div>
        <div className="mt-4 flex-1" />
        <button onClick={() => onBuy('price_monthly_business')} className="mt-4 px-4 py-2 rounded-lg bg-indigo-600 text-white">Buy Business</button>
      </div>

      <div className="p-6 bg-white rounded-xl shadow flex flex-col">
        <div className="text-xl font-semibold">Pro</div>
        <div className="text-slate-500 mt-2">Custom solutions & priority support</div>
        <div className="mt-4 text-3xl font-bold">$99</div>
        <div className="mt-4 flex-1" />
        <button onClick={() => onBuy('price_monthly_pro')} className="mt-4 px-4 py-2 rounded-lg bg-indigo-600 text-white">Buy Pro</button>
      </div>
    </div>
  </section>
);

const About = () => (
  <section id="about" className="max-w-6xl mx-auto px-6 py-16 bg-indigo-50 rounded-2xl">
    <h2 className="text-2xl font-bold">About NovaCraft</h2>
    <p className="text-slate-700 mt-2">We help businesses launch beautiful web experiences quickly, with modern tooling and secure payments.</p>
    <div className="mt-6 grid md:grid-cols-3 gap-6">
      <div className="p-4">
        <div className="font-semibold">Mission</div>
        <div className="text-slate-600 mt-2">Simplify digital presence for small teams.</div>
      </div>
      <div className="p-4">
        <div className="font-semibold">Vision</div>
        <div className="text-slate-600 mt-2">A world where creators ship faster and iterate often.</div>
      </div>
      <div className="p-4">
        <div className="font-semibold">Values</div>
        <div className="text-slate-600 mt-2">Quality, speed, transparency.</div>
      </div>
    </div>
  </section>
);

const Contact = () => (
  <section id="contact" className="max-w-4xl mx-auto px-6 py-16">
    <h2 className="text-2xl font-bold">Contact</h2>
    <p className="text-slate-600 mt-2">Have a project? Send us a message.</p>
    <form className="mt-6 grid grid-cols-1 gap-4">
      <input placeholder="Your name" className="px-4 py-3 rounded-lg border" />
      <input placeholder="Email" className="px-4 py-3 rounded-lg border" />
      <textarea placeholder="Message" className="px-4 py-3 rounded-lg border h-32" />
      <div className="flex items-center gap-3">
        <button type="submit" className="px-4 py-3 rounded-lg bg-indigo-600 text-white">Send message</button>
        <div className="text-sm text-slate-500">Or email us at hello@novacraft.example</div>
      </div>
    </form>
  </section>
);

const Footer = () => (
  <footer className="mt-12 bg-white border-t">
    <div className="max-w-6xl mx-auto px-6 py-8 flex flex-col md:flex-row items-center justify-between">
      <div className="text-sm text-slate-600">© {new Date().getFullYear()} NovaCraft. All rights reserved.</div>
      <div className="flex gap-4 text-sm mt-4 md:mt-0">
        <a href="#">Privacy</a>
        <a href="#">Terms</a>
      </div>
    </div>
  </footer>
);

export default function App(){
  const scrollTo = (id) => {
    const el = document.getElementById(id);
    if(el) el.scrollIntoView({ behavior: 'smooth', block: 'start' });
  };

  const handleNav = (target) => {
    if(target === 'home') window.scrollTo({ top: 0, behavior: 'smooth' });
    else scrollTo(target);
  };

  // Client-side BUY handler -- calls server to create Stripe Checkout session
  const handleBuy = async (priceId) => {
    try{
      // Replace endpoint with your serverless endpoint
      const resp = await fetch('/api/create-checkout-session', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ priceId }),
      });
      const data = await resp.json();
      if(data.url){
        // Redirect the user to Stripe Checkout
        window.location.href = data.url;
      } else {
        alert('Checkout failed - check server logs');
      }
    }catch(e){
      console.error(e);
      alert('Error creating checkout session');
    }
  };

  return (
    <div className="min-h-screen bg-slate-50 text-slate-800 antialiased">
      <Nav onNav={handleNav} />
      <main>
        <Hero onBuy={handleBuy} />
        <Services />
        <Pricing onBuy={handleBuy} />
        <About />
        <Contact />
        <Footer />
      </main>
    </div>
  );
}

/*
